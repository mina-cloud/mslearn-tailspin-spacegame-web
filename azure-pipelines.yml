### YamlMime:Yaml
#ms.openlocfilehash: e8e0c0487370439eb50ee376aa05769b8455f241
#ms.sourcegitcommit: f3937681c3f6e310355071e1842967695e365751
#ms.translationtype: HT
#ms.contentlocale: de-DE
#ms.lasthandoff: 10/29/2021
#ms.locfileid: "130761796"
trigger:
- '*'
pool:
  vmImage: ubuntu-20.04
  demands:
  - npm
variables:
  buildConfiguration: Release
  wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
  dotnetSdkVersion: 5.x
steps:
- task: UseDotNet@2
  displayName: Use .NET SDK $(dotnetSdkVersion)
  inputs:
    packageType: sdk
    version: $(dotnetSdkVersion)
- task: Npm@1
  displayName: Run npm install
  inputs:
    verbose: false
- script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
  displayName: Compile Sass assets
- task: gulp@1
  displayName: Run gulp tasks
- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  workingDirectory: $(wwwrootDir)
- task: DotNetCoreCLI@2
  displayName: Restore project dependencies
  inputs:
    command: restore
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build the project - $(buildConfiguration)
  inputs:
    command: build
    arguments: --no-restore --configuration $(buildConfiguration)
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Publish the project - $(buildConfiguration)
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
    zipAfterPublish: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()